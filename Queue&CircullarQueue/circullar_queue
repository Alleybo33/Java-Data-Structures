package CqueueP;

public class CPqueue {
	private int maxSize;
	private int[] queueArr;
	private int rear;
	private int front;
	private int noItems;
	
	public CPqueue(int s) {
		maxSize = s;
		queueArr = new int[maxSize];
		rear = -1;
		front = 0;
		noItems = 0;
	}
	
	public void insert(int x) {
		if(noItems == maxSize) {
			System.out.println("The queue is full");
		}else {
			if(rear == maxSize-1) {
				rear = -1;
			}else {
				queueArr[++rear] = x;
				noItems++;
			}
				
		}
	}
	
	public int remove() {
		if(noItems == 0) {
			System.out.println("The queue is full");
			return -99;
		}
		else {
			if(front == maxSize) {
				front = 0;
			}
			noItems--;
			return queueArr[front++];
		}
	}
	
	public int peekFront() {
		if(noItems == 0) {
			System.out.println("The queue is full");
			return -99;
		}
		else {
			return queueArr[front];
		}
	}
	
	public boolean isEmpty() {
		return (noItems == 0);
	}
	
	public boolean isFUll() {
		return (noItems == maxSize);
	}
}
